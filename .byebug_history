continue
session[:current_picture_id]
session
continue
current_user.currentPictureId
current_user.currentPictureId = 1
current_user.currentPictureId
current_user.
current_user.currentPictureId
continue
current_user.currentPictureId  =1 
current_user.currentPictureId
current_user
continue
current_user.currentPictureId
current_user
reload!
User.first.pictures.last
User.first.pictures.loast
User.first.pictures.first
User.first.pictures
user.pictures
current_user.puzzle = 1
current_user
User.first
User
User.current_puzzle = 1
User.email
User.name
User
User.current
User
continue
params
@currentPictureId
self.currentPictureId
self.class
self
@currentPictureId
continue
@currentPictureId
continue
continu
"hello=".call(123)
hello=.call(123)
hello=123
continue
hello=(123)
hello
continue
hello
hello=123
currentPictureId=10
currentPictureId
continue
currentPictureId
@currentPictureId
self.currentPictureId
continue
currentPictureId
continue
@currentPictureId
self.currentPictureId
continue
self.currentPictureId
self.methods
self.instance_method
self.instance_methods
self.id
self
continue
self.id
self
continue
currentPictureId
@currentPictureId
continue
self.currentPictureId
currentPictureId
continue
currentPictureId
continue
@currentPictureId
self.currentPictureId
currentPictureId
continue
self.currentPictureId
@currentPictureId
currentPictureId
continue
currentPictureId
currentPictureId = params[:id]
currentPictureId
continue
currentPictureId = 999
continue
get_current_picture_id
continue
get_current_picture_id
set_current_picture_id(10)
get_current_picture_id
continue
coneinue
params
continue
params
continue
@picture.id
@picture
picture
params
@picture.characters.second
@picture.characters.first
@picture.characters
@picture
continue
success
continue
@picture
success
continue
picture_params[:title]
picture_params
picture_params[0]
picture_params[title]
picture_params.title
picture_params
continue
@x.characters
@x
@x.save
@x.characters.build(name: 'Waldo')
@x.characters.build('Waldo')
@x.characters.create('Waldo')
@x = current_user.pictures.build(title: "Train Station")
current_user.pictures.build(title: "Train Station")
current_user
Picture.CreatePicture(current_user,"Train Station")
continue
Picture.CreatePicture(current_user,"Train Station")
conitnue
Picture.CreatePicture(current_user,"Train Station")
@picture
Picture.CreatePicture(current_user,"Train Station")
continue
Picture.CreatePicture(current_user,"Train Station")
continue
current_user
Picture.CreatePicture("Train Station")
current_user
Picture.CreatePicture("Train Station")
continue
c = MyModule::PuzzleGenerator
PuzzleGenerator.CreatePuzzle()
PuzzleGenerator.CreatePuzzle("Train Station")
continue
PuzzleGenerator.CreatePuzzle("Train Station")
x.save
x = current_user.pictures.build(picture_params)
picture_params
params
x.save
x
x = current_user.pictures.create(picture_params)
current_user.pictures.create(picture_params)
current_user.picture.create(picture_params)
current_user
continue
@px.save
@px = Picture.create(picture_params)
Picture.create(picture_params)
continue
params
continue
picture_params
params
continue
render :json => false, :status => 404
continue
result
format
continue
format.json
format
format.symbol
format
format === format.html
format === format.json
format.json{ render :json => true, :status => 200 }
format.json
format
continue
format
continue
result
format
continue
next
continue
@clicked = @person.wasClicked(x,y)
continue
self.xPosition.to_f
continue
y
x
self.yPosition.to_f
self.yPosition
self.xPosition.to_f
self.xPosition
continue
next
continue
self
this
Character
y
x
continue
params[:name]
params
continue
params
